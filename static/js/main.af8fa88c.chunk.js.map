{"version":3,"sources":["components/Button.js","components/Carousel.js","App.js","index.js"],"names":["Buttons","swipe","this","props","className","type","onClick","React","PureComponent","Carousel","state","left","count","frameSize","flow","images","itemWidth","infinite","step","toLeft","updateCount","length","setState","animationDuration","carouselSize","transitionDuration","style","width","transform","transition","map","link","index","id","key","src","alt","Button","Component","App","ReactDOM","render","document","getElementById"],"mappings":"6MAgCeA,G,6KA5BH,IACAC,EAAUC,KAAKC,MAAfF,MAER,OACE,yBAAKG,UAAU,aACb,4BACEC,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAML,EAAM,KAHvB,QAOA,4BACEI,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAML,GAAO,KAHxB,a,GAbcM,IAAMC,gBC+FbC,E,4MA5FbC,MAAQ,CACNC,KAAM,EACNC,MAAO,EAAKT,MAAMU,W,EAGpBZ,MAAQ,SAACa,GAAU,IAAD,EACyC,EAAKX,MAAtDY,EADQ,EACRA,OAAQC,EADA,EACAA,UAAWH,EADX,EACWA,UAAWI,EADtB,EACsBA,SAAUC,EADhC,EACgCA,KADhC,EAEQ,EAAKR,MAArBC,EAFQ,EAERA,KAAMC,EAFE,EAEFA,MACVO,EAAS,EACTC,EAAc,EAEdR,EAAQM,EAAOH,EAAOM,SAAoB,IAAVP,GAClCK,EAAUP,IAAUG,EAAOM,QAAUJ,EACjC,EACCF,EAAOM,OAAST,EAASI,EAAYF,EAAOH,EACjDS,EAAeH,GAAYL,IAAUG,EAAOM,OACxCR,EACAE,EAAOM,QACO,IAATP,GAAcF,EAAQC,EAAYK,EACvCN,EAAQM,IAAS,GAAKN,IAAUC,GAClCM,EAAUP,EAAQC,EAAaG,EAAYL,EAAOG,EAClDM,EAAcP,IAEdM,EAAUF,GAAYL,IAAUC,GAC3BE,EAAOM,OAASR,GAAaG,GAAaF,EAC3CH,EACJS,EAAeH,GAAYL,IAAUC,EACjCE,EAAOM,OACPR,IAGNM,EAASH,EAAYE,EAAOJ,EAAOH,EACnCS,EAAwB,IAATN,EAAcF,EAAQM,EAAON,EAAQM,GAGtD,EAAKI,UAAS,iBAAO,CACnBX,KAAMQ,EAAQP,MAAOQ,O,uDAIf,IAAD,EACqDlB,KAAKC,MAAzDY,EADD,EACCA,OAAQC,EADT,EACSA,UAAWH,EADpB,EACoBA,UAAWU,EAD/B,EAC+BA,kBAC9BZ,EAAST,KAAKQ,MAAdC,KACFa,EAAeR,EAAYH,EAC3BY,EAAqBF,EAAoB,IAE/C,OACE,yBACEnB,UAAU,WACVsB,MAAO,CACLC,MAAM,GAAD,OAAKH,EAAL,QAGP,wBACEpB,UAAU,iBACVsB,MAAO,CACLE,UAAU,aAAD,OAAejB,EAAf,OACTkB,WAAW,OAAD,OAASJ,EAAT,OAGXV,EAAOe,KAAI,SAACC,EAAMC,GACjB,IAAMC,EAAKD,EAAQ,EAEnB,OACE,wBAAIE,IAAKD,GACP,yBACEP,MAAO,CACLC,MAAM,GAAD,OAAKX,EAAL,OAEPmB,IAAKJ,EACLK,IAAKH,SAOf,kBAACI,EAAD,CAASpC,MAAOC,KAAKD,a,GA9ENM,IAAM+B,WCiCdC,E,4MAjCb7B,MAAQ,CACNK,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,uDAIM,IACAA,EAAWb,KAAKQ,MAAhBK,OAER,OACE,yBAAKX,UAAU,OACb,kBAAC,EAAD,CACEW,OAAQA,EACRG,KAAM,EACNL,UAAW,EACXG,UAAW,IACXO,kBAAmB,IACnBN,UAAQ,S,GA3BAV,IAAM+B,WCAxBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.af8fa88c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Buttons extends React.PureComponent {\n  render() {\n    const { swipe } = this.props;\n\n    return (\n      <div className=\"container\">\n        <button\n          type=\"button\"\n          className=\"button prev\"\n          onClick={() => swipe(1)}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          className=\"button next\"\n          onClick={() => swipe(-1)}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nButtons.propTypes = {\n  swipe: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport './Carousel.scss';\nimport PropTypes, { string } from 'prop-types';\nimport Buttons from './Button';\n\nclass Carousel extends React.Component {\n  state = {\n    left: 0,\n    count: this.props.frameSize,\n  }\n\n  swipe = (flow) => {\n    const { images, itemWidth, frameSize, infinite, step } = this.props;\n    const { left, count } = this.state;\n    let toLeft = 0;\n    let updateCount = 0;\n\n    if (count + step > images.length && flow === -1) {\n      toLeft = (count === images.length && infinite)\n        ? 0\n        : (images.length % count) * itemWidth * flow + left;\n      updateCount = (infinite && count === images.length)\n        ? frameSize\n        : images.length;\n    } else if (flow === 1 && count < frameSize + step) {\n      if (count % step !== 0 && count !== frameSize) {\n        toLeft = (count % frameSize) * itemWidth + left * flow;\n        updateCount = frameSize;\n      } else {\n        toLeft = (infinite && count === frameSize)\n          ? (images.length - frameSize) * itemWidth * -flow\n          : left;\n        updateCount = (infinite && count === frameSize)\n          ? images.length\n          : frameSize;\n      }\n    } else {\n      toLeft = itemWidth * step * flow + left;\n      updateCount = (flow === 1) ? count - step : count + step;\n    }\n\n    this.setState(() => ({\n      left: toLeft, count: updateCount,\n    }));\n  }\n\n  render() {\n    const { images, itemWidth, frameSize, animationDuration } = this.props;\n    const { left } = this.state;\n    const carouselSize = itemWidth * frameSize;\n    const transitionDuration = animationDuration / 1000;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${carouselSize}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translate(${left}px)`,\n            transition: `all ${transitionDuration}s`,\n          }}\n        >\n          {images.map((link, index) => {\n            const id = index + 1;\n\n            return (\n              <li key={id}>\n                <img\n                  style={{\n                    width: `${itemWidth}px`,\n                  }}\n                  src={link}\n                  alt={id}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <Buttons swipe={this.swipe} />\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  step: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(string).isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}