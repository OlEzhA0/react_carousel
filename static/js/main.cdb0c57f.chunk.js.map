{"version":3,"sources":["components/Button.js","components/Carousel.js","App.js","index.js"],"names":["Buttons","this","props","prev","next","className","type","onClick","React","PureComponent","Carousel","state","left","count","frameSize","setState","step","itemWidth","images","infinite","length","restLeft","animationDuration","carouselSize","transitionDuration","console","log","style","width","transition","map","link","index","id","key","src","alt","Button","Component","App","ReactDOM","render","document","getElementById"],"mappings":"6MAiCeA,G,6KA7BH,IAAD,EACgBC,KAAKC,MAApBC,EADD,EACCA,KAAMC,EADP,EACOA,KAEd,OACE,yBAAKC,UAAU,aACb,4BACEC,KAAK,SACLD,UAAU,cACVE,QAASJ,GAHX,QAOA,4BACEG,KAAK,SACLD,UAAU,cACVE,QAASH,GAHX,a,GAbcI,IAAMC,gBCuHbC,E,4MApHbC,MAAQ,CACNC,KAAM,EACNC,MAAO,EAAKX,MAAMY,W,EAGpBX,KAAO,WACL,EAAKY,UAAS,SAACJ,GAAW,IAAD,EACkC,EAAKT,MAAtDc,EADe,EACfA,KAAMC,EADS,EACTA,UAAWC,EADF,EACEA,OAAQC,EADV,EACUA,SAAUL,EADpB,EACoBA,UAE3C,GAAmB,IAAfH,EAAMC,MAAeO,EAIzB,OAAIR,EAAMC,MAAQ,GAAKO,EAId,CACLP,MAJYM,EAAOE,OAASN,IAAcG,EAIpCJ,MAHMK,EAAOE,QAOnBT,EAAME,MAAQG,IAAS,GAAKL,EAAME,MAAe,EAAPG,EACrC,CACLJ,KAAM,EAAGC,MAAOG,GAOb,CACLJ,KAJWK,EAAYD,EAAOL,EAAMC,KAI9BC,MAHMF,EAAME,MAAQG,O,EAQhCZ,KAAO,WAAO,IAAD,EAC8C,EAAKF,MAAtDc,EADG,EACHA,KAAMC,EADH,EACGA,UAAWC,EADd,EACcA,OAAQC,EADtB,EACsBA,SAAUL,EADhC,EACgCA,UAE3C,EAAKC,UAAS,SAACJ,GACb,GAAIA,EAAME,QAAUK,EAAOE,QAAWD,EAAtC,CAIA,GAAIR,EAAME,QAAUK,EAAOE,QAAUD,EAGnC,MAAO,CACLP,KAAM,EAAGC,MAHGC,GAOhB,GAAIH,EAAME,MAAQG,EAAOE,EAAOE,OAAQ,CACtC,IAAMC,EAAWH,EAAOE,OAAST,EAAME,MAGvC,MAAO,CACLD,MAHYK,EAAYI,EAAWV,EAAMC,KAGnCC,MAAOK,EAAOE,QAOxB,MAAO,CACLR,MAJYK,EAAYD,EAAOL,EAAMC,KAI/BC,MAHMF,EAAME,MAAQG,Q,uDAQtB,IAAD,EACqDf,KAAKC,MAAzDgB,EADD,EACCA,OAAQD,EADT,EACSA,UAAWH,EADpB,EACoBA,UAAWQ,EAD/B,EAC+BA,kBAC9BV,EAASX,KAAKU,MAAdC,KACFW,EAAeN,EAAYH,EAC3BU,EAAqBF,EAAoB,IAG/C,OADAG,QAAQC,IAAIzB,KAAKU,MAAME,MAAOD,GAE5B,yBAAKP,UAAU,WAAWsB,MAAO,CAAEC,MAAM,GAAD,OAAKL,EAAL,QACtC,wBACElB,UAAU,iBACVsB,MAAO,CACLf,KAAK,GAAD,OAAKA,EAAL,MAAeiB,WAAW,OAAD,OAASL,EAAT,OAG9BN,EAAOY,KAAI,SAACC,EAAMC,GACjB,IAAMC,EAAKD,EAAQ,EAEnB,OACE,wBAAIE,IAAKD,GACP,yBACEN,MAAO,CAAEC,MAAM,GAAD,OAAKX,EAAL,OACdkB,IAAKJ,EACLK,IAAKH,SAOf,kBAACI,EAAD,CAASlC,KAAMF,KAAKE,KAAMC,KAAMH,KAAKG,Y,GAtGtBI,IAAM8B,WCiCdC,E,4MAjCb5B,MAAQ,CACNO,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,uDAIM,IACAA,EAAWjB,KAAKU,MAAhBO,OAER,OACE,yBAAKb,UAAU,OACb,kBAAC,EAAD,CACEa,OAAQA,EACRF,KAAM,EACNF,UAAW,EACXG,UAAW,IACXK,kBAAmB,IACnBH,UAAU,S,GA3BFX,IAAM8B,WCAxBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cdb0c57f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Buttons extends React.PureComponent {\n  render() {\n    const { prev, next } = this.props;\n\n    return (\n      <div className=\"container\">\n        <button\n          type=\"button\"\n          className=\"button prev\"\n          onClick={prev}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          className=\"button next\"\n          onClick={next}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nButtons.propTypes = {\n  prev: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport './Carousel.scss';\nimport PropTypes, { string } from 'prop-types';\nimport Buttons from './Button';\n\nclass Carousel extends React.Component {\n  state = {\n    left: 0,\n    count: this.props.frameSize,\n  }\n\n  prev = () => {\n    this.setState((state) => {\n      const { step, itemWidth, images, infinite, frameSize } = this.props;\n\n      if (state.left === 0 && !infinite) {\n        return;\n      }\n\n      if (state.left >= 0 && infinite) {\n        const left = (images.length - frameSize) * -itemWidth;\n        const count = images.length;\n\n        return {\n          left, count,\n        };\n      }\n\n      if (state.count % step !== 0 && state.count < step * 2) {\n        return {\n          left: 0, count: step,\n        };\n      }\n\n      const left = itemWidth * step + state.left;\n      const count = state.count - step;\n\n      return {\n        left, count,\n      };\n    });\n  }\n\n  next = () => {\n    const { step, itemWidth, images, infinite, frameSize } = this.props;\n\n    this.setState((state) => {\n      if (state.count === images.length && !infinite) {\n        return;\n      }\n\n      if (state.count === images.length && infinite) {\n        const count = frameSize;\n\n        return {\n          left: 0, count,\n        };\n      }\n\n      if (state.count + step > images.length) {\n        const restLeft = images.length % state.count;\n        const left = -itemWidth * restLeft + state.left;\n\n        return {\n          left, count: images.length,\n        };\n      }\n\n      const left = -itemWidth * step + state.left;\n      const count = state.count + step;\n\n      return {\n        left, count,\n      };\n    });\n  }\n\n  render() {\n    const { images, itemWidth, frameSize, animationDuration } = this.props;\n    const { left } = this.state;\n    const carouselSize = itemWidth * frameSize;\n    const transitionDuration = animationDuration / 1000;\n\n    console.log(this.state.count, left);\n    return (\n      <div className=\"Carousel\" style={{ width: `${carouselSize}px` }}>\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            left: `${left}px`, transition: `all ${transitionDuration}s`,\n          }}\n        >\n          {images.map((link, index) => {\n            const id = index + 1;\n\n            return (\n              <li key={id}>\n                <img\n                  style={{ width: `${itemWidth}px` }}\n                  src={link}\n                  alt={id}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <Buttons prev={this.prev} next={this.next} />\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  step: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(string).isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={true}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}